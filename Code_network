
install.packages("igragh")
library(igraph)

unique(flights$origin)
unique(flights$dest)

as.matrix(unique(flights$origin), unique(flights$dest))

as.matrix.data.frame(unique(flights$origin), 
                     unique(flights$dest))
?as.matrix

flights %>% 
  group_by(origin, dest) %>% 
  summarise(n = n())

flights_network <- flights %>% 
  group_by(origin, dest) %>% 
  summarise(n = n())

View(flights_network)

flights_network <- flights_network %>% 
  rename(count = n)

library(tidyverse)
data(package = "tidyverse")

letter <- read.csv("https://github.com/jessesadler/intro-to-r/blob/master/data/correspondence-data-1585.csv")

letter <- read_csv("data/correspondence-data-1585.csv")


sources <- letters %>%
  distinct(source) %>%
  rename(label = source)

destinations <- letters %>%
  distinct(destination) %>%
  rename(label = destination)


nodes <- full_join(sources, destinations, by = "label")
nodes

nodes <- nodes %>% rowid_to_column("id")
nodes


per_route <- letters %>%  
  group_by(source, destination) %>%
  summarise(weight = n()) %>% 
  ungroup()
per_route

edges <- per_route %>% 
  left_join(nodes, by = c("source" = "label")) %>% 
  rename(from = id)

edges <- edges %>% 
  left_join(nodes, by = c("destination" = "label")) %>% 
  rename(to = id)

edges <- select(edges, from, to, weight)
edges

library(network)

routes_network <- network(edges, vertex.attr = nodes, matrix.type = "edgelist", ignore.eval = FALSE)

class(routes_network)

routes_network

plot(routes_network, vertex.cex = 3)

plot(routes_network, vertex.cex = 3, mode = "circle")
  
detach(package:network)
rm(routes_network)
library(igraph)

routes_igraph <- graph_from_data_frame(d = edges, vertices = nodes, directed = TRUE)

routes_igraph

plot(routes_igraph, edge.arrow.size = 0.2)

plot(routes_igraph, layout = layout_with_graphopt, edge.arrow.size = 0.2)

library(tidygraph)
library(ggraph)

routes_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)

routes_igraph_tidy <- as_tbl_graph(routes_igraph)

class(routes_tidy)

class(routes_igraph_tidy)

class(routes_igraph)

routes_tidy

routes_tidy %>% 
  activate(edges) %>% 
  arrange(desc(weight))

ggraph(routes_tidy) + geom_edge_link() + geom_node_point() + theme_graph()

ggraph(routes_tidy, layout = "graphopt") + 
  geom_node_point() +
  geom_edge_link(aes(width = weight), alpha = 0.8) + 
  scale_edge_width(range = c(0.2, 2)) +
  geom_node_text(aes(label = label), repel = TRUE) +
  labs(edge_width = "Letters") +
  theme_graph()

ggraph(routes_igraph, layout = "linear") + 
  geom_edge_arc(aes(width = weight), alpha = 0.8) + 
  scale_edge_width(range = c(0.2, 2)) +
  geom_node_text(aes(label = label)) +
  labs(edge_width = "Letters") +
  theme_graph()

library(visNetwork)
library(networkD3)

visNetwork(nodes, edges)

edges <- mutate(edges, width = weight/5 + 1)

visNetwork(nodes, edges) %>% 
  visIgraphLayout(layout = "layout_with_fr") %>% 
  visEdges(arrows = "middle")

nodes_d3 <- mutate(nodes, id = id - 1)
edges_d3 <- mutate(edges, from = from - 1, to = to - 1)


forceNetwork(Links = edges_d3, Nodes = nodes_d3, Source = "from", Target = "to", 
             NodeID = "label", Group = "id", Value = "weight", 
             opacity = 1, fontSize = 16, zoom = TRUE)


feat <- featuring
library(tidyverse)
install.packages("ggraph")

library(ggraph)
install.packages("tidygraph")
library(tidygraph)

fg <- as_tbl_graph(feat)
class(fg)

fg

plot(fg)

fg %>% ggraph(layout = "circle") + geom_node_point() + geom_edge_link()


feat %>% as_tbl_graph() %>% ggraph(layout='kk') + geom_node_text(aes(label=name)) + geom_edge_link(aes(start_cap = label_rect(node1.name), end_cap = label_rect(node2.name)))

feat %>% as_tbl_graph() %>% 
  mutate(bet= centrality_betweenness()) %>% 
  as_tibble %>% arrange(desc(bet))

feat %>% as_tbl_graph() %>% 
  mutate(bet= centrality_betweenness(), col = centrality_closeness()) %>% 
  as_tibble()


subway %>% as_tbl_graph() %>% ggraph(layout='kk') + geom_edge_link(aes(color=line)) + geom_node_point(color='gray25', size=1)


subway %>% as_tbl_graph() %>% 
  mutate(eig=centrality_eigen()) %>% 
  as_tibble %>% arrange(desc(eig))







